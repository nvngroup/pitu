name: Update WA Proto Files

on:
  schedule:
    - cron: "0 10 * * 1"
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Tipo de release'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      dry_run:
        description: 'Dry run (apenas simular, não executar)'
        required: false
        default: 'false'
        type: choice
        options:
        - 'false'
        - 'true'

jobs:
  update-proto:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Baileys repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: baileys

      - name: Clone wa-proto repository
        uses: actions/checkout@v4
        with:
          repository: wppconnect-team/wa-proto
          path: wa-proto

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: wa-proto/yarn.lock

      - name: Install dependencies in wa-proto
        working-directory: wa-proto
        run: yarn install --frozen-lockfile

      - name: Build wa-proto
        working-directory: wa-proto
        run: yarn build

      - name: Copy WAProto.proto to Baileys
        run: |
          cp wa-proto/WAProto.proto baileys/WAProto/WAProto.proto

      - name: Copy index files from dist to Baileys
        run: |
          cp wa-proto/dist/index.js baileys/WAProto/index.js
          cp wa-proto/dist/index.d.ts baileys/WAProto/index.d.ts

      - name: Extract and update WhatsApp version
        run: |
          # Garantir que o script não falhe em caso de grep sem resultados
          set +e

          echo "Searching for WhatsApp version in WAProto.proto..."

          # Primeiro, vamos ver o conteúdo do arquivo para debug
          echo "First 10 lines of WAProto.proto:"
          head -10 baileys/WAProto/WAProto.proto || echo "Could not read file"

          # Buscar por "WhatsApp Version" no WAProto.proto (case insensitive)
          VERSION_LINE=$(grep -i "whatsapp version" baileys/WAProto/WAProto.proto 2>/dev/null || echo "")

          if [ -n "$VERSION_LINE" ]; then
            echo "Found version line: $VERSION_LINE"

            # Extrair a versão usando regex (formato: 2.3000.1024069866)
            VERSION=$(echo "$VERSION_LINE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)

            if [ -n "$VERSION" ]; then
              echo "Extracted version: $VERSION"

              # Dividir a versão em partes
              IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

              # Atualizar o baileys-version.json
              cat > baileys/src/Defaults/baileys-version.json << EOF
          {
          	"version": [$MAJOR,$MINOR,$PATCH]
          }
          EOF

              echo "Updated baileys-version.json with version: [$MAJOR,$MINOR,$PATCH]"
            else
              echo "Could not extract version number from: $VERSION_LINE"
            fi
          else
            echo "WhatsApp Version line not found with grep. Trying line 4..."
            # Verificar se existe na linha 4 especificamente
            LINE_4=$(sed -n '4p' baileys/WAProto/WAProto.proto 2>/dev/null || echo "")
            echo "Line 4 content: '$LINE_4'"

            if echo "$LINE_4" | grep -qi "whatsapp version"; then
              echo "Found version reference in line 4"
              VERSION=$(echo "$LINE_4" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)

              if [ -n "$VERSION" ]; then
                echo "Extracted version from line 4: $VERSION"

                IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

                cat > baileys/src/Defaults/baileys-version.json << EOF
          {
          	"version": [$MAJOR,$MINOR,$PATCH]
          }
          EOF
                echo "Updated baileys-version.json with version from line 4: [$MAJOR,$MINOR,$PATCH]"
              else
                echo "Could not extract version from line 4"
              fi
            else
              echo "No WhatsApp Version found in line 4. Searching entire file for version pattern..."
              # Como fallback, vamos tentar buscar qualquer número de versão no arquivo
              VERSION_FALLBACK=$(grep -oE '[0-9]+\.[0-9]+\.[0-9]+' baileys/WAProto/WAProto.proto 2>/dev/null | head -1 || echo "")
              if [ -n "$VERSION_FALLBACK" ]; then
                echo "Found fallback version pattern: $VERSION_FALLBACK"
                IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_FALLBACK"
                cat > baileys/src/Defaults/baileys-version.json << EOF
          {
          	"version": [$MAJOR,$MINOR,$PATCH]
          }
          EOF
                echo "Updated baileys-version.json with fallback version: [$MAJOR,$MINOR,$PATCH]"
              else
                echo "No version pattern found anywhere in the file. Keeping existing baileys-version.json"
              fi
            fi
          fi

          # Reativar exit em caso de erro para os próximos comandos
          set -e

          echo "Version extraction step completed successfully"

      - name: Check for changes
        id: check_changes
        working-directory: baileys
        run: |
          git add WAProto/ src/Defaults/baileys-version.json
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in WAProto files or baileys-version.json"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in WAProto files or baileys-version.json"
          fi

      - name: Commit and push changes to dev
        if: steps.check_changes.outputs.changes == 'true'
        working-directory: baileys
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore: update WAProto files from wa-proto repository"
          git push origin dev
